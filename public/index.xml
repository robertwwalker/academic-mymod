<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robert W. Walker on Robert W. Walker</title>
    <link>/</link>
    <description>Recent content in Robert W. Walker on Robert W. Walker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0700</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pew Data on Bond Ratings and Rainy Day Funds</title>
      <link>/post/pew-data-on-bond-ratings-and-rainy-day-funds/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pew-data-on-bond-ratings-and-rainy-day-funds/</guid>
      <description>&lt;div id=&#34;pew-on-rainy-day-funds-and-credit-quality&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Pew on Rainy Day Funds and Credit Quality&lt;/h1&gt;
&lt;p&gt;The Pew Charitable Trusts released a report last May (2017) that portrays rainy day funds that are well designed and deployed as a form of insurance against ratings downgrades. One the one hand, this is perfectly sensible because the alternatives do not sound like very good ideas. A poorly designed rainy day fund, for example, is going to have to fall short on either the rainy day or the fund. A poorly deployed savings device for cash flow management over the not-so-short term also seems unlikely to bolster market confidence in the repayment abilities of an issuer. If this very simple perspective that seems plausible is true, then a simple replication should be easy. And it is. Pew gladly shared the data and code. If one has access to Stata, the study is easy to replicate.&lt;/p&gt;
&lt;p&gt;Taken from the website above:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;../../img/PewCTRecs.png&#34; alt=&#34;Pew Recommendations&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Pew Recommendations&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;on-the-other-hand&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;On the other hand&lt;/h2&gt;
&lt;p&gt;The variation in the data may leave a good bit to be desired. Let’s have a look at some basic features of the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(haven)
library(dplyr)
Pew.Data &amp;lt;- read_dta(&amp;quot;~/Desktop/Pew/modeledforprediction.dta&amp;quot;)
glimpse(Pew.Data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 966
## Variables: 45
## $ fyear            &amp;lt;dbl&amp;gt; 1994, 1995, 1996, 1997, 1998, 1999, 2000, 200...
## $ statefips        &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
## $ state            &amp;lt;chr&amp;gt; &amp;quot;Alabama&amp;quot;, &amp;quot;Alabama&amp;quot;, &amp;quot;Alabama&amp;quot;, &amp;quot;Alabama&amp;quot;, &amp;quot;...
## $ bbalance         &amp;lt;dbl&amp;gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, ...
## $ withdraw         &amp;lt;dbl&amp;gt; 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.000...
## $ deposit          &amp;lt;dbl&amp;gt; 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.0...
## $ interest         &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
## $ ebalance         &amp;lt;dbl&amp;gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, ...
## $ fund             &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
## $ spo              &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0,...
## $ moodyo           &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 0, 0,...
## $ fitcho           &amp;lt;dbl&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N...
## $ spnum            &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, ...
## $ moodynum         &amp;lt;dbl&amp;gt; 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, ...
## $ fitchnum         &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, ...
## $ surplus          &amp;lt;dbl&amp;gt; -3, -73, 4, -35, 27, 21, 30, -34, -47, -177, ...
## $ gfebal           &amp;lt;dbl&amp;gt; 128, 54, 58, 23, 51, 72, 101, 67, 19, 113, 34...
## $ longdebt         &amp;lt;dbl&amp;gt; 0.10800536, 0.09275389, 0.08864151, 0.0814541...
## $ shortdebt        &amp;lt;dbl&amp;gt; 2.790155e-05, 8.648518e-05, 7.688679e-06, 4.9...
## $ totaldebt        &amp;lt;dbl&amp;gt; 0.10803326, 0.09284038, 0.08864920, 0.0814590...
## $ population       &amp;lt;dbl&amp;gt; 8.346216, 8.357078, 8.365626, 8.373577, 8.382...
## $ pop65            &amp;lt;dbl&amp;gt; 548.045, 554.718, 561.331, 567.094, 571.722, ...
## $ gfe              &amp;lt;dbl&amp;gt; 3860, 4151, 4240, 4475, 4688, 4919, 5215, 521...
## $ gfr              &amp;lt;dbl&amp;gt; 3857, 4078, 4244, 4440, 4715, 4940, 5245, 517...
## $ spi              &amp;lt;dbl&amp;gt; 79368.02, 84194.33, 88048.51, 92206.95, 98699...
## $ rdfbal           &amp;lt;dbl&amp;gt; 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0...
## $ rdfdep           &amp;lt;dbl&amp;gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, ...
## $ rdfwit           &amp;lt;dbl&amp;gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000...
## $ gfebalgfe        &amp;lt;dbl&amp;gt; 3.3160622, 1.3008914, 1.3679246, 0.5139665, 1...
## $ spratingshift    &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ spupgrade        &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ spdowngrade      &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ moodyratingshift &amp;lt;dbl&amp;gt; NA, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0...
## $ moodyupgrade     &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,...
## $ moodydowngrade   &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ fitchratingshift &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ fitchupgrade     &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ fitchdowngrade   &amp;lt;dbl&amp;gt; NA, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
## $ rdfnet           &amp;lt;dbl&amp;gt; 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.000...
## $ rdfnetgfe        &amp;lt;dbl&amp;gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000...
## $ revenuebw        &amp;lt;dbl&amp;gt; 4.613832, 15.427544, -32.826214, -55.708824, ...
## $ revenuebwtrend   &amp;lt;dbl&amp;gt; 3852.386, 4062.573, 4276.826, 4495.709, 4709....
## $ trendstanding    &amp;lt;dbl&amp;gt; 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, ...
## $ valenceusage     &amp;lt;dbl&amp;gt; 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.000...
## $ valenceusagegfe  &amp;lt;dbl&amp;gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(Pew.Data$state)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##        Alabama         Alaska        Arizona       Arkansas     California 
##             21             21             21             21             21 
##    Connecticut       Delaware        Florida        Georgia         Hawaii 
##             21             21             21             21             21 
##          Idaho        Indiana           Iowa       Kentucky      Louisiana 
##             21             21             21             21             21 
##          Maine       Maryland  Massachusetts       Michigan      Minnesota 
##             21             21             21             21             21 
##    Mississippi       Missouri       Nebraska         Nevada  New Hampshire 
##             21             21             21             21             21 
##     New Jersey     New Mexico       New York North Carolina   North Dakota 
##             21             21             21             21             21 
##           Ohio       Oklahoma         Oregon   Pennsylvania   Rhode Island 
##             21             21             21             21             21 
## South Carolina   South Dakota      Tennessee          Texas           Utah 
##             21             21             21             21             21 
##        Vermont       Virginia     Washington  West Virginia      Wisconsin 
##             21             21             21             21             21 
##        Wyoming 
##             21&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The panel is balanced; in the original, New Mexico, New York, South Carolina, and Vermont are duplicated but the Stata code writes out a transformed dataset for analysis that is recorded. The technical report accompanying the study and the stata code give us some insights. In all cases, there are two or more RDF’s and they require combining.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;combining-ratings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Combining Ratings&lt;/h1&gt;
&lt;p&gt;In previous work, Skip Krueger and I have treated bond ratings as a multiple rater problem and have deployed cumulative IRT models to measure latent credit quality. One of the methodologically desireable approaches to the Pew study was a model deploying state-level fixed effects but the ordinal data precludes doing this reliably because states that have always experienced the highest rating will have unbounded fixed effects. The continuous latent scale post measurement allows us to sidestep that problem. First, let me scale the data&lt;/p&gt;
&lt;div id=&#34;scaling-the-ratings&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scaling the Ratings&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(MCMCpack)
Scaled.BR &amp;lt;- MCMCordfactanal(~spnum+fitchnum+moodynum, data=Pew.Data, factors=1, burnin = 1e6, mcmc=1e6, thin=100, store.scores=TRUE, tune=0.7, lambda.constraints=list(fitchnum=list(2,&amp;quot;+&amp;quot;)), verbose=50000)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
load(&amp;quot;~/Desktop/Pew/Scaled-BR-Pew.RData&amp;quot;)
BR.Data &amp;lt;- t(Scaled.BR[,c(26:991)])
BR.Parms &amp;lt;- Scaled.BR[,c(1:25)]
state.ratings &amp;lt;- data.frame(state=Pew.Data$state, statefips=Pew.Data$statefips, year=Pew.Data$fyear, BR.Data)
state.ratings.long &amp;lt;- tidyr::gather(state.ratings, sampleno, value, -statefips, -year, -state)
state.SE &amp;lt;- state.ratings.long %&amp;gt;% group_by(state,year) %&amp;gt;% summarise(Credit.Quality=mean(value), t1=quantile(value, probs=0.025), t2=quantile(value, probs=0.975))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-does-the-scaling-look-like&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What does the scaling look like?&lt;/h2&gt;
&lt;div id=&#34;the-first-group&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The First Group&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stored &amp;lt;- list()
stored &amp;lt;- state.SE %&amp;gt;% group_by(state) %&amp;gt;% filter(state%in%c(names(table(state.SE$state))[c(1:16)])) %&amp;gt;%
  ggplot(., aes(x=year, y=Credit.Quality)) + theme_minimal() + theme(axis.text.x  = element_text(angle=60)) +
    geom_ribbon(aes(ymin=t1, ymax=t2, colour=state, fill=state), alpha=0.4) + guides(fill=&amp;quot;none&amp;quot;, alpha=&amp;quot;none&amp;quot;) +
    geom_line() + guides(colour=&amp;quot;none&amp;quot;) +
#    geom_jitter(width=0.2) +
#    geom_point(shape=21, size=3, fill=&amp;quot;white&amp;quot;) +
    ylim(-4,4) + facet_wrap(~state)
stored&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-07-pew-data-on-bond-ratings-and-rainy-day-funds_files/figure-html/Plot5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-second-group&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Second Group&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stored &amp;lt;- list()
stored &amp;lt;- state.SE %&amp;gt;% group_by(state) %&amp;gt;% filter(state%in%c(names(table(state.SE$state))[c(17:32)])) %&amp;gt;%
  ggplot(., aes(x=year, y=Credit.Quality)) + theme_minimal() + theme(axis.text.x  = element_text(angle=60)) +
    geom_ribbon(aes(ymin=t1, ymax=t2, colour=state, fill=state), alpha=0.4) + guides(fill=&amp;quot;none&amp;quot;, alpha=&amp;quot;none&amp;quot;) +
    geom_line() + guides(colour=&amp;quot;none&amp;quot;) +
#    geom_jitter(width=0.2) +
#    geom_point(shape=21, size=3, fill=&amp;quot;white&amp;quot;) +
    ylim(-4,4) + facet_wrap(~state)
stored&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-07-pew-data-on-bond-ratings-and-rainy-day-funds_files/figure-html/Plot5b-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stored &amp;lt;- list()
stored &amp;lt;- state.SE %&amp;gt;% group_by(state) %&amp;gt;% filter(state%in%c(names(table(state.SE$state))[c(33:46)])) %&amp;gt;%
  ggplot(., aes(x=year, y=Credit.Quality)) + theme_minimal() + theme(axis.text.x  = element_text(angle=60)) +
    geom_ribbon(aes(ymin=t1, ymax=t2, colour=state, fill=state), alpha=0.4) + guides(fill=&amp;quot;none&amp;quot;, alpha=&amp;quot;none&amp;quot;) +
    geom_line() + guides(colour=&amp;quot;none&amp;quot;) +
#    geom_jitter(width=0.2) +
#    geom_point(shape=21, size=3, fill=&amp;quot;white&amp;quot;) +
    ylim(-4,4) + facet_wrap(~state)
stored&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-07-pew-data-on-bond-ratings-and-rainy-day-funds_files/figure-html/Plot5c-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mapping with the Government Finance Database</title>
      <link>/post/mapping-with-the-government-finance-database/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/mapping-with-the-government-finance-database/</guid>
      <description>&lt;div id=&#34;the-government-finance-database&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The Government Finance Database&lt;/h1&gt;
&lt;p&gt;Some of my colleagues (Kawika Pierson, Mike Hand, and Fred Thompson) have put together a convenient access point for the &lt;a href=&#34;http://willamette.edu/mba/research_impact/public_datasets/index.html&#34;&gt;Government Finance data&lt;/a&gt; available from the Census. They published an article in &lt;a href=&#34;http://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0130119&amp;amp;type=printable&#34;&gt;PLoS One&lt;/a&gt; with the rationale; I want to build some maps from their project with extensible code and functions. The overall dataset is enormous. I have downloaded the whole thing and filtered out the states. It seems that &lt;code&gt;read.csv&lt;/code&gt; works better than &lt;code&gt;read_csv&lt;/code&gt; for this task.&lt;/p&gt;
&lt;div id=&#34;splitting-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Splitting the Data&lt;/h2&gt;
&lt;p&gt;A link to the .zip version for states is &lt;a href=&#34;http://www.willamette.edu/~kpierson/TheGovernmentFinanceDatabase_StateData.zip&#34;&gt;here&lt;/a&gt;. A link to the .zip version for counties is &lt;a href=&#34;http://www.willamette.edu/~kpierson/TheGovernmentFinanceDatabase_CountyData.zip&#34;&gt;here&lt;/a&gt;. You have to download their data directly as a .zip and unzip. If you downbload the entire file, as I did, unzip it, and you can import it to &lt;span class=&#34;math inline&#34;&gt;\(R\)&lt;/span&gt; with &lt;code&gt;read.csv&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(dplyr)
GFD &amp;lt;- read.csv(&amp;quot;~/Documents/The Government Finance Database_All Data.csv&amp;quot;)
State.Data &amp;lt;- GFD %&amp;gt;% filter(Type_Code==0)
County.Data &amp;lt;- GFD %&amp;gt;% filter(Type_Code==1)
rm(GFD)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-basic-maps&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The basic maps&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;choroplethr&lt;/em&gt; makes the process of mapping data a bit too easy. It is locked down but it works very well. What I will require is a simple function to cleave off a particular year, the state name, and whatever series of data I wish to make; I will need to store the latter two with the name &lt;code&gt;region&lt;/code&gt; for the state name and &lt;code&gt;value&lt;/code&gt; for whatever data we wish to plot. Why? That is the way that &lt;em&gt;state_choropleth()&lt;/em&gt; is designed. For the automated functions &lt;em&gt;state_choropleth()&lt;/em&gt; and &lt;em&gt;county_choropleth()&lt;/em&gt;, this is quite easy. You will notice that there are FIPS and name inner joins available for this.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(choroplethr)
library(choroplethrMaps)
data(state.map)
names(state.map)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;long&amp;quot;       &amp;quot;lat&amp;quot;        &amp;quot;order&amp;quot;      &amp;quot;hole&amp;quot;       &amp;quot;piece&amp;quot;     
##  [6] &amp;quot;group&amp;quot;      &amp;quot;id&amp;quot;         &amp;quot;GEO_ID&amp;quot;     &amp;quot;STATE&amp;quot;      &amp;quot;region&amp;quot;    
## [11] &amp;quot;LSAD&amp;quot;       &amp;quot;CENSUSAREA&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(county.regions)
names(county.regions)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;region&amp;quot;                &amp;quot;county.fips.character&amp;quot; &amp;quot;county.name&amp;quot;          
## [4] &amp;quot;state.name&amp;quot;            &amp;quot;state.fips.character&amp;quot;  &amp;quot;state.abb&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;putting-them-together-states&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Putting them together: States&lt;/h1&gt;
&lt;p&gt;Let’s see what we can do. The first step is that the state name conventions are inconsistent, though the FIPS codes, thankfully, do not change. I will convert them to strings, to drop the unused levels of the factors from import, and replace the state delineated names with a single standard name. The second relevant selector is going to be the year, &lt;em&gt;Year4&lt;/em&gt;. Finally, I have to choose something to put in values. Let me try total revenue per capita in year 2015. &lt;em&gt;dplyr&lt;/em&gt; is so neat that this can be done in only five lines. Define and name the object; filter by the year; mutate the data into the two things I need; select them off.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(tidyverse)
State.Data$Name &amp;lt;- as.character(State.Data$Name)
State.Data$NameFixed &amp;lt;- gsub(&amp;quot; STATE GOVT&amp;quot;,&amp;quot;&amp;quot;,State.Data$Name)
State.Data$NameFLower &amp;lt;- tolower(State.Data$NameFixed)
# Clean up the names and store the cleaned result
my.GFD.2015 &amp;lt;- State.Data %&amp;gt;% 
  filter(Year4==2015) %&amp;gt;%
  mutate(value = Total_Taxes / Population, region = NameFLower) %&amp;gt;%
  select(region, value)
my.GFD.2015&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            region    value
## 1         alabama 2.007714
## 2          alaska 1.169672
## 3         arizona 2.062385
## 4        arkansas 3.085824
## 5      california 3.861881
## 6        colorado 2.347743
## 7     connecticut 4.518299
## 8        delaware 3.714758
## 9         florida 1.835985
## 10        georgia 1.930886
## 11         hawaii 4.530280
## 12          idaho 2.402183
## 13       illinois 3.174292
## 14        indiana 2.628473
## 15           iowa 2.941598
## 16         kansas 2.707783
## 17       kentucky 2.620959
## 18      louisiana 2.076066
## 19          maine 3.057240
## 20       maryland 3.329998
## 21  massachusetts 3.975644
## 22       michigan 2.716768
## 23      minnesota 4.451924
## 24    mississippi 2.641045
## 25       missouri 1.965284
## 26        montana 2.752764
## 27       nebraska 2.682621
## 28         nevada 2.605809
## 29  new hampshire 1.869624
## 30     new jersey 3.523957
## 31     new mexico 2.882076
## 32       new york 3.950608
## 33 north carolina 2.497637
## 34   north dakota 7.583087
## 35           ohio 2.436590
## 36       oklahoma 2.405160
## 37         oregon 2.624777
## 38   pennsylvania 2.842799
## 39   rhode island 3.026298
## 40 south carolina 1.967472
## 41   south dakota 1.950109
## 42      tennessee 1.923927
## 43          texas 2.005396
## 44           utah 2.237496
## 45        vermont 4.860939
## 46       virginia 2.449827
## 47     washington 2.879141
## 48  west virginia 3.018220
## 49      wisconsin 2.948908
## 50        wyoming 4.020295&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is exactly the data that I need. Finally, add a title and continuous color scheming.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;state_choropleth(my.GFD.2015, title=&amp;quot;Total Taxes per capita&amp;quot;, num_colors=1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in self$bind(): The following regions were missing and are being
## set to NA: district of columbia&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-25-mapping-with-the-government-finance-database_files/figure-html/MapTheData-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That’s far too easy. Total taxes, which I have not bothered to look up, appear to contain some unexpected details. What else can be done with it? The final code chunk does it all. To calculate a new map, just change the name of the thing per capitized. What data are available? See below….&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(State.Data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;SurveyYr&amp;quot;                     &amp;quot;Year4&amp;quot;                       
##   [3] &amp;quot;YearofData&amp;quot;                   &amp;quot;ID&amp;quot;                          
##   [5] &amp;quot;IDChanged&amp;quot;                    &amp;quot;State_Code&amp;quot;                  
##   [7] &amp;quot;Type_Code&amp;quot;                    &amp;quot;County&amp;quot;                      
##   [9] &amp;quot;Name&amp;quot;                         &amp;quot;FIPS_Code_State&amp;quot;             
##  [11] &amp;quot;FIPS_County&amp;quot;                  &amp;quot;FIPS_Place&amp;quot;                  
##  [13] &amp;quot;FYEndDate&amp;quot;                    &amp;quot;YearPop&amp;quot;                     
##  [15] &amp;quot;SchLevCode&amp;quot;                   &amp;quot;Population&amp;quot;                  
##  [17] &amp;quot;FunctionCode&amp;quot;                 &amp;quot;Enrollment&amp;quot;                  
##  [19] &amp;quot;Total_Revenue&amp;quot;                &amp;quot;Total_Rev_Own_Sources&amp;quot;       
##  [21] &amp;quot;General_Revenue&amp;quot;              &amp;quot;Gen_Rev_Own_Sources&amp;quot;         
##  [23] &amp;quot;Total_Taxes&amp;quot;                  &amp;quot;Property_Tax&amp;quot;                
##  [25] &amp;quot;Tot_Sales___Gr_Rec_Tax&amp;quot;       &amp;quot;Total_Gen_Sales_Tax&amp;quot;         
##  [27] &amp;quot;Total_Select_Sales_Tax&amp;quot;       &amp;quot;Alcoholic_Beverage_Tax&amp;quot;      
##  [29] &amp;quot;Amusement_Tax&amp;quot;                &amp;quot;Insurance_Premium_Tax&amp;quot;       
##  [31] &amp;quot;Motor_Fuels_Tax&amp;quot;              &amp;quot;Pari_mutuels_Tax&amp;quot;            
##  [33] &amp;quot;Public_Utility_Tax&amp;quot;           &amp;quot;Tobacco_Tax&amp;quot;                 
##  [35] &amp;quot;Other_Select_Sales_Tax&amp;quot;       &amp;quot;Total_License_Taxes&amp;quot;         
##  [37] &amp;quot;Alcoholic_Beverage_Lic&amp;quot;       &amp;quot;Amusement_License&amp;quot;           
##  [39] &amp;quot;Corporation_License&amp;quot;          &amp;quot;Hunting___Fishing_License&amp;quot;   
##  [41] &amp;quot;Motor_Vehicle_License&amp;quot;        &amp;quot;Motor_Veh_Oper_License&amp;quot;      
##  [43] &amp;quot;Motor_Vehicle_License_Total&amp;quot;  &amp;quot;Public_Utility_License&amp;quot;      
##  [45] &amp;quot;Occup_and_Bus_Lic_NEC&amp;quot;        &amp;quot;Other_License_Taxes&amp;quot;         
##  [47] &amp;quot;Total_Income_Taxes&amp;quot;           &amp;quot;Individual_Income_Tax&amp;quot;       
##  [49] &amp;quot;Corp_Net_Income_Tax&amp;quot;          &amp;quot;Death_and_Gift_Tax&amp;quot;          
##  [51] &amp;quot;Docum_and_Stock_Tr_Tax&amp;quot;       &amp;quot;Severance_Tax&amp;quot;               
##  [53] &amp;quot;Taxes_NEC&amp;quot;                    &amp;quot;Total_IG_Revenue&amp;quot;            
##  [55] &amp;quot;Total_Fed_IG_Revenue&amp;quot;         &amp;quot;Fed_IGR_Air_Transport&amp;quot;       
##  [57] &amp;quot;Fed_IGR_Education&amp;quot;            &amp;quot;Fed_IGR_Emp_Sec_Adm&amp;quot;         
##  [59] &amp;quot;Fed_IGR_Gen_Rev_Shar&amp;quot;         &amp;quot;Fed_IGR_Gen_Support&amp;quot;         
##  [61] &amp;quot;Fed_IGR_Health___Hos&amp;quot;         &amp;quot;Fed_IGR_Highways&amp;quot;            
##  [63] &amp;quot;Fed_IGR_Transit_Sub&amp;quot;          &amp;quot;Fed_IGR_Hous_Com_Dev&amp;quot;        
##  [65] &amp;quot;Fed_IGR_Natural_Res&amp;quot;          &amp;quot;Fed_IGR_Public_Welf&amp;quot;         
##  [67] &amp;quot;Fed_IGR_Sewerage&amp;quot;             &amp;quot;Fed_IGR_Other&amp;quot;               
##  [69] &amp;quot;Total_State_IG_Revenue&amp;quot;       &amp;quot;State_IGR_Education&amp;quot;         
##  [71] &amp;quot;State_IGR_Tax_Relief&amp;quot;         &amp;quot;State_IGR_Oth_Gen_Sup&amp;quot;       
##  [73] &amp;quot;State_IGR_Gen_Sup&amp;quot;            &amp;quot;State_IGR_Health___Hos&amp;quot;      
##  [75] &amp;quot;State_IGR_Highways&amp;quot;           &amp;quot;State_IGR_Transit_Sub&amp;quot;       
##  [77] &amp;quot;State_IGR_Hous_Com_Dev&amp;quot;       &amp;quot;State_IGR_Public_Welf&amp;quot;       
##  [79] &amp;quot;State_IGR_Sewerage&amp;quot;           &amp;quot;State_IGR_Other&amp;quot;             
##  [81] &amp;quot;Tot_Local_IG_Rev&amp;quot;             &amp;quot;Local_IGR_InterSchool_Aid&amp;quot;   
##  [83] &amp;quot;Local_IGR_Other_Education&amp;quot;    &amp;quot;Local_IGR_Oth_Gen_Sup&amp;quot;       
##  [85] &amp;quot;Local_IGR_Health___Hos&amp;quot;       &amp;quot;Local_IGR_Highways&amp;quot;          
##  [87] &amp;quot;Local_IGR_Transit_Sub&amp;quot;        &amp;quot;Local_IGR_Hous_Com_Dev&amp;quot;      
##  [89] &amp;quot;Local_IGR_Public_Welf&amp;quot;        &amp;quot;Local_IGR_Sewerage&amp;quot;          
##  [91] &amp;quot;Local_IGR_Other&amp;quot;              &amp;quot;Tot_Chgs_and_Misc_Rev&amp;quot;       
##  [93] &amp;quot;Total_General_Charges&amp;quot;        &amp;quot;Chg_Air_Transportation&amp;quot;      
##  [95] &amp;quot;Chg_Misc_Com_Activ&amp;quot;           &amp;quot;Chg_Total_Education&amp;quot;         
##  [97] &amp;quot;Chg_Total_Elem_Education&amp;quot;     &amp;quot;Chg_Elem_Ed_Sch_Lunch&amp;quot;       
##  [99] &amp;quot;Chg_Elem_Ed_Tuition&amp;quot;          &amp;quot;Chg_Elem_Ed_NEC&amp;quot;             
## [101] &amp;quot;Chg_Total_High_Ed&amp;quot;            &amp;quot;Chg_Hospitals&amp;quot;               
## [103] &amp;quot;Chg_Highways&amp;quot;                 &amp;quot;Chg_Regular_Highways&amp;quot;        
## [105] &amp;quot;Chg_Toll_Highways&amp;quot;            &amp;quot;Chg_Housing___Comm_Dev&amp;quot;      
## [107] &amp;quot;Chg_Total_Nat_Res&amp;quot;            &amp;quot;Chg_Parking&amp;quot;                 
## [109] &amp;quot;Chg_Parks___Recreation&amp;quot;       &amp;quot;Chg_Sewerage&amp;quot;                
## [111] &amp;quot;Chg_Solid_Waste_Mgmt&amp;quot;         &amp;quot;Chg_Water_Transport&amp;quot;         
## [113] &amp;quot;Chg_All_Other_NEC&amp;quot;            &amp;quot;Misc_General_Revenue&amp;quot;        
## [115] &amp;quot;Special_Assessments&amp;quot;          &amp;quot;Prop_Sale_Total&amp;quot;             
## [117] &amp;quot;Prop_Sale_Hous_Com_Dev&amp;quot;       &amp;quot;Prop_Sale_Other&amp;quot;             
## [119] &amp;quot;Interest_Revenue&amp;quot;             &amp;quot;Fines_and_Forfeits&amp;quot;          
## [121] &amp;quot;Rents_and_Royalties&amp;quot;          &amp;quot;Net_Lottery_Revenue&amp;quot;         
## [123] &amp;quot;Misc_General_Rev_NEC&amp;quot;         &amp;quot;Liquor_Stores_Revenue&amp;quot;       
## [125] &amp;quot;Total_Utility_Revenue&amp;quot;        &amp;quot;Water_Utility_Revenue&amp;quot;       
## [127] &amp;quot;Electric_Utility_Rev&amp;quot;         &amp;quot;Gas_Utility_Rev&amp;quot;             
## [129] &amp;quot;Transit_Utility_Rev&amp;quot;          &amp;quot;Total_Insur_Trust_Rev&amp;quot;       
## [131] &amp;quot;Total_Insur_Trust_Ctrb&amp;quot;       &amp;quot;Tot_Ins_Trust_Inv_Rev&amp;quot;       
## [133] &amp;quot;Total_Emp_Ret_Rev&amp;quot;            &amp;quot;Emp_Ret_Total_Ctrib&amp;quot;         
## [135] &amp;quot;Emp_Ret_Loc_Emp_Ctrib&amp;quot;        &amp;quot;Emp_Ret_Loc_To_Loc_Sys&amp;quot;      
## [137] &amp;quot;Emp_Ret_From_Other_Gov&amp;quot;       &amp;quot;Emp_Ret_Sta_To_Sta_Ctr&amp;quot;      
## [139] &amp;quot;Emp_Ret_Int_Rev&amp;quot;              &amp;quot;Emp_Ret_Other_Earnings&amp;quot;      
## [141] &amp;quot;Total_Unemp_Rev&amp;quot;              &amp;quot;Unemp_Payroll_Tax&amp;quot;           
## [143] &amp;quot;Unemp_Int_Revenue&amp;quot;            &amp;quot;Unemp_Federal_Advances&amp;quot;      
## [145] &amp;quot;Total_Expenditure&amp;quot;            &amp;quot;Total_IG_Expenditure&amp;quot;        
## [147] &amp;quot;Direct_Expenditure&amp;quot;           &amp;quot;Total_Current_Expend&amp;quot;        
## [149] &amp;quot;Total_Current_Oper&amp;quot;           &amp;quot;Total_Capital_Outlays&amp;quot;       
## [151] &amp;quot;Total_Construction&amp;quot;           &amp;quot;Total_Other_Capital_Outlays&amp;quot; 
## [153] &amp;quot;Tot_Assist___Subsidies&amp;quot;       &amp;quot;Total_Interest_on_Debt&amp;quot;      
## [155] &amp;quot;Total_Insur_Trust_Ben&amp;quot;        &amp;quot;Total_Salaries___Wages&amp;quot;      
## [157] &amp;quot;General_Expenditure&amp;quot;          &amp;quot;IG_Exp_To_State_Govt&amp;quot;        
## [159] &amp;quot;IG_Exp_To_Local_Govts&amp;quot;        &amp;quot;IG_Exp_To_Federal_Govt&amp;quot;      
## [161] &amp;quot;Direct_General_Expend&amp;quot;        &amp;quot;General_Current_Expend&amp;quot;      
## [163] &amp;quot;General_Current_Oper&amp;quot;         &amp;quot;General_Capital_Outlay&amp;quot;      
## [165] &amp;quot;General_Construction&amp;quot;         &amp;quot;General_Capital_Outlay_Other&amp;quot;
## [167] &amp;quot;General_Assist___Sub&amp;quot;         &amp;quot;General_Debt_Interest&amp;quot;       
## [169] &amp;quot;Air_Trans_Total_Expend&amp;quot;       &amp;quot;Air_Trans_Direct_Expend&amp;quot;     
## [171] &amp;quot;Air_Trans_Cap_Outlay&amp;quot;         &amp;quot;Air_Trans_Current_Exp&amp;quot;       
## [173] &amp;quot;Air_Trans_Construction&amp;quot;       &amp;quot;Air_Trans_IG_To_State&amp;quot;       
## [175] &amp;quot;Air_Trans_IG_Local_Govts&amp;quot;     &amp;quot;Misc_Com_Activ_Tot_Exp&amp;quot;      
## [177] &amp;quot;Misc_Com_Activ_Cap_Out&amp;quot;       &amp;quot;Misc_Com_Activ_Current_Exp&amp;quot;  
## [179] &amp;quot;Misc_Com_Activ_Constr&amp;quot;        &amp;quot;Correct_Total_Exp&amp;quot;           
## [181] &amp;quot;Correct_Direct_Exp&amp;quot;           &amp;quot;Correct_Cap_Outlay&amp;quot;          
## [183] &amp;quot;Correct_Current_Exp&amp;quot;          &amp;quot;Correct_Construct&amp;quot;           
## [185] &amp;quot;Correct_IG_To_St&amp;quot;             &amp;quot;Correct_IG_Loc_Govts&amp;quot;        
## [187] &amp;quot;Total_Educ_Total_Exp&amp;quot;         &amp;quot;Total_Educ_Direct_Exp&amp;quot;       
## [189] &amp;quot;Total_Educ_Assist___Sub&amp;quot;      &amp;quot;Total_Educ_Cap_Outlay&amp;quot;       
## [191] &amp;quot;Total_Educ_Current_Exp&amp;quot;       &amp;quot;Total_Educ_Construct&amp;quot;        
## [193] &amp;quot;Elem_Educ_Total_Exp&amp;quot;          &amp;quot;Elem_Educ_Direct_Exp&amp;quot;        
## [195] &amp;quot;Elem_Educ_Cap_Outlay&amp;quot;         &amp;quot;Elem_Educ_Current_Exp&amp;quot;       
## [197] &amp;quot;Elem_Educ_Construction&amp;quot;       &amp;quot;Elem_Educ_IG_To_State&amp;quot;       
## [199] &amp;quot;Elem_Educ_IG_Local_Govts&amp;quot;     &amp;quot;Elem_Educ_IG_Sch_to_Sch&amp;quot;     
## [201] &amp;quot;Higher_Ed_Total_Exp&amp;quot;          &amp;quot;Higher_Ed_Direct_Exp&amp;quot;        
## [203] &amp;quot;Higher_Ed_Cap_Outlay&amp;quot;         &amp;quot;Higher_Ed_Current_Exp&amp;quot;       
## [205] &amp;quot;Higher_Ed_Construct&amp;quot;          &amp;quot;Higher_Ed_IG_To_St&amp;quot;          
## [207] &amp;quot;Higher_Ed_IG_Loc_Govts&amp;quot;       &amp;quot;Educ_NEC_Total_Expend&amp;quot;       
## [209] &amp;quot;Educ_NEC_Direct_Expend&amp;quot;       &amp;quot;Educ_NEC_Assistance&amp;quot;         
## [211] &amp;quot;Educ_NEC_Cap_Outlay&amp;quot;          &amp;quot;Educ_NEC_Current_Exp&amp;quot;        
## [213] &amp;quot;Educ_NEC_Construction&amp;quot;        &amp;quot;Educ_NEC_IG_To_State&amp;quot;        
## [215] &amp;quot;Educ_NEC_IG_Local_Govts&amp;quot;      &amp;quot;Emp_Sec_Adm_Direct_Exp&amp;quot;      
## [217] &amp;quot;Emp_Sec_Adm_Cap_Outlay&amp;quot;       &amp;quot;Emp_Sec_Adm_Current_Exp&amp;quot;     
## [219] &amp;quot;Emp_Sec_Adm_Construct&amp;quot;        &amp;quot;Fin_Admin_Total_Exp&amp;quot;         
## [221] &amp;quot;Fin_Admin_Direct_Exp&amp;quot;         &amp;quot;Fin_Admin_Cap_Outlay&amp;quot;        
## [223] &amp;quot;Fin_Admin_Current_Exp&amp;quot;        &amp;quot;Fin_Admin_Construction&amp;quot;      
## [225] &amp;quot;Fin_Admin_IG_To_State&amp;quot;        &amp;quot;Fin_Admin_IG_Local_Govts&amp;quot;    
## [227] &amp;quot;Fire_Prot_Total_Expend&amp;quot;       &amp;quot;Fire_Prot_Direct_Exp&amp;quot;        
## [229] &amp;quot;Fire_Prot_Cap_Outlay&amp;quot;         &amp;quot;Fire_Prot_Current_Exp&amp;quot;       
## [231] &amp;quot;Fire_Prot_Construction&amp;quot;       &amp;quot;Fire_Prot_IG_To_State&amp;quot;       
## [233] &amp;quot;Fire_Prot_IG_Local_Govts&amp;quot;     &amp;quot;Judicial_Total_Expend&amp;quot;       
## [235] &amp;quot;Judicial_Direct_Expend&amp;quot;       &amp;quot;Judicial_Cap_Outlay&amp;quot;         
## [237] &amp;quot;Judicial_Current_Exp&amp;quot;         &amp;quot;Judicial_Construction&amp;quot;       
## [239] &amp;quot;Judicial_IG_To_State&amp;quot;         &amp;quot;Judicial_IG_Local_Govts&amp;quot;     
## [241] &amp;quot;Cen_Staff_Total_Expend&amp;quot;       &amp;quot;Cen_Staff_Direct_Exp&amp;quot;        
## [243] &amp;quot;Cen_Staff_Cap_Outlay&amp;quot;         &amp;quot;Cen_Staff_Current_Exp&amp;quot;       
## [245] &amp;quot;Cen_Staff_Construction&amp;quot;       &amp;quot;Cen_Staff_IG_To_State&amp;quot;       
## [247] &amp;quot;Cen_Staff_IG_Local_Govts&amp;quot;     &amp;quot;Gen_Pub_Bldg_Total_Exp&amp;quot;      
## [249] &amp;quot;Gen_Pub_Bldg_Cap_Out&amp;quot;         &amp;quot;Gen_Pub_Bldg_Current_Exp&amp;quot;    
## [251] &amp;quot;Gen_Pub_Bldg_Construct&amp;quot;       &amp;quot;Health_Total_Expend&amp;quot;         
## [253] &amp;quot;Health_Direct_Expend&amp;quot;         &amp;quot;Health_Capital_Outlay&amp;quot;       
## [255] &amp;quot;Health_Current_Exp&amp;quot;           &amp;quot;Health_Construction&amp;quot;         
## [257] &amp;quot;Health_IG_To_State&amp;quot;           &amp;quot;Health_IG_Local_Govts&amp;quot;       
## [259] &amp;quot;Total_Hospital_Total_Exp&amp;quot;     &amp;quot;Total_Hospital_Dir_Exp&amp;quot;      
## [261] &amp;quot;Total_Hospital_Cap_Out&amp;quot;       &amp;quot;Total_Hospital_Current_Exp&amp;quot;  
## [263] &amp;quot;Total_Hospital_Construct&amp;quot;     &amp;quot;Total_Hospital_IG_To_State&amp;quot;  
## [265] &amp;quot;Total_Hospital_IG_Loc_Govts&amp;quot;  &amp;quot;Own_Hospital_Total_Exp&amp;quot;      
## [267] &amp;quot;Own_Hospital_Cap_Out&amp;quot;         &amp;quot;Own_Hospital_Current_Exp&amp;quot;    
## [269] &amp;quot;Own_Hospital_Construct&amp;quot;       &amp;quot;Hosp_Other_Total_Exp&amp;quot;        
## [271] &amp;quot;Hosp_Other_Direct_Exp&amp;quot;        &amp;quot;Hosp_Other_Cap_Outlay&amp;quot;       
## [273] &amp;quot;Hosp_Other_Current_Exp&amp;quot;       &amp;quot;Hosp_Other_Construct&amp;quot;        
## [275] &amp;quot;Hosp_Other_IG_To_State&amp;quot;       &amp;quot;Hosp_Other_IG_Loc_Govts&amp;quot;     
## [277] &amp;quot;Total_Highways_Tot_Exp&amp;quot;       &amp;quot;Total_Highways_Dir_Exp&amp;quot;      
## [279] &amp;quot;Total_Highways_Cap_Out&amp;quot;       &amp;quot;Total_Highways_Current_Exp&amp;quot;  
## [281] &amp;quot;Total_Highways_Construct&amp;quot;     &amp;quot;Regular_Hwy_Total_Exp&amp;quot;       
## [283] &amp;quot;Regular_Hwy_Direct_Exp&amp;quot;       &amp;quot;Regular_Hwy_Cap_Outlay&amp;quot;      
## [285] &amp;quot;Regular_Hwy_Current_Exp&amp;quot;      &amp;quot;Regular_Hwy_Construct&amp;quot;       
## [287] &amp;quot;Regular_Hwy_IG_To_Sta&amp;quot;        &amp;quot;Regular_Hwy_IG_Loc_Govts&amp;quot;    
## [289] &amp;quot;Toll_Hwy_Total_Expend&amp;quot;        &amp;quot;Toll_Hwy_Cap_Outlay&amp;quot;         
## [291] &amp;quot;Toll_Hwy_Current_Exp&amp;quot;         &amp;quot;Toll_Hwy_Construction&amp;quot;       
## [293] &amp;quot;Transit_Sub_Total_Exp&amp;quot;        &amp;quot;Transit_Sub_Direct_Sub&amp;quot;      
## [295] &amp;quot;Transit_Sub_IG_To_Sta&amp;quot;        &amp;quot;Transit_Sub_IG_Loc_Govts&amp;quot;    
## [297] &amp;quot;Transit_Sub_To_Own_Sys&amp;quot;       &amp;quot;Hous___Com_Total_Exp&amp;quot;        
## [299] &amp;quot;Hous___Com_Direct_Exp&amp;quot;        &amp;quot;Hous___Com_Cap_Outlay&amp;quot;       
## [301] &amp;quot;Hous___Com_Current_Exp&amp;quot;       &amp;quot;Hous___Com_Construct&amp;quot;        
## [303] &amp;quot;Hous___Com_IG_To_State&amp;quot;       &amp;quot;Hous___Com_IG_Loc_Govts&amp;quot;     
## [305] &amp;quot;Libraries_Total_Expend&amp;quot;       &amp;quot;Libraries_Direct_Exp&amp;quot;        
## [307] &amp;quot;Libraries_Cap_Outlay&amp;quot;         &amp;quot;Libraries_Current_Exp&amp;quot;       
## [309] &amp;quot;Libraries_Construction&amp;quot;       &amp;quot;Libraries_IG_To_State&amp;quot;       
## [311] &amp;quot;Libraries_IG_Local_Govts&amp;quot;     &amp;quot;Natural_Res_Total_Exp&amp;quot;       
## [313] &amp;quot;Natural_Res_Direct_Exp&amp;quot;       &amp;quot;Natural_Res_Cap_Outlay&amp;quot;      
## [315] &amp;quot;Natural_Res_Current_Exp&amp;quot;      &amp;quot;Natural_Res_Construct&amp;quot;       
## [317] &amp;quot;Natural_Res_IG_To_Sta&amp;quot;        &amp;quot;Natural_Res_IG_Loc_Govts&amp;quot;    
## [319] &amp;quot;Parking_Total_Expend&amp;quot;         &amp;quot;Parking_Direct_Expend&amp;quot;       
## [321] &amp;quot;Parking_Capital_Outlay&amp;quot;       &amp;quot;Parking_Current_Exp&amp;quot;         
## [323] &amp;quot;Parking_Construction&amp;quot;         &amp;quot;Parking_IG_To_State&amp;quot;         
## [325] &amp;quot;Parking_IG_Local_Govts&amp;quot;       &amp;quot;Parks___Rec_Total_Exp&amp;quot;       
## [327] &amp;quot;Parks___Rec_Direct_Exp&amp;quot;       &amp;quot;Parks___Rec_Cap_Outlay&amp;quot;      
## [329] &amp;quot;Parks___Rec_Current_Exp&amp;quot;      &amp;quot;Parks___Rec_Construct&amp;quot;       
## [331] &amp;quot;Parks___Rec_IG_To_Sta&amp;quot;        &amp;quot;Parks___Rec_IG_Loc_Govts&amp;quot;    
## [333] &amp;quot;Police_Prot_Total_Exp&amp;quot;        &amp;quot;Police_Prot_Direct_Exp&amp;quot;      
## [335] &amp;quot;Police_Prot_Cap_Outlay&amp;quot;       &amp;quot;Police_Prot_Current_Exp&amp;quot;     
## [337] &amp;quot;Police_Prot_Construct&amp;quot;        &amp;quot;Police_Prot_IG_To_Sta&amp;quot;       
## [339] &amp;quot;Police_Prot_IG_Loc_Govts&amp;quot;     &amp;quot;Prot_Insp_Total_Exp&amp;quot;         
## [341] &amp;quot;Prot_Insp_Direct_Exp&amp;quot;         &amp;quot;Prot_Insp_Cap_Outlay&amp;quot;        
## [343] &amp;quot;Prot_Insp_Current_Exp&amp;quot;        &amp;quot;Prot_Insp_Construction&amp;quot;      
## [345] &amp;quot;Prot_Insp_IG_To_State&amp;quot;        &amp;quot;Prot_Insp_IG_Local_Govts&amp;quot;    
## [347] &amp;quot;Public_Welf_Total_Exp&amp;quot;        &amp;quot;Public_Welf_Direct_Exp&amp;quot;      
## [349] &amp;quot;Public_Welf_Cash_Asst&amp;quot;        &amp;quot;Public_Welf_Cap_Outlay&amp;quot;      
## [351] &amp;quot;Public_Welf_Current_Exp&amp;quot;      &amp;quot;Public_Welf_Construct&amp;quot;       
## [353] &amp;quot;Welf_Categ_Total_Exp&amp;quot;         &amp;quot;Welf_Categ_Cash_Assist&amp;quot;      
## [355] &amp;quot;Welf_Categ_IG_To_State&amp;quot;       &amp;quot;Welf_Categ_IG_Loc_Govts&amp;quot;     
## [357] &amp;quot;Welf_Cash_Total_Exp&amp;quot;          &amp;quot;Welf_Cash_Cash_Assist&amp;quot;       
## [359] &amp;quot;Welf_Cash_IG_Local_Govts&amp;quot;     &amp;quot;Welf_Vend_Pmts_Medical&amp;quot;      
## [361] &amp;quot;Welf_Vend_Pmts_NEC&amp;quot;           &amp;quot;Welf_State_Share_Part_D&amp;quot;     
## [363] &amp;quot;Welf_Ins_Total_Exp&amp;quot;           &amp;quot;Welf_Ins_Cap_Outlay&amp;quot;         
## [365] &amp;quot;Welf_Ins_Current_Exp&amp;quot;         &amp;quot;Welf_Ins_Construction&amp;quot;       
## [367] &amp;quot;Welf_NEC_Total_Expend&amp;quot;        &amp;quot;Welf_NEC_Direct_Expend&amp;quot;      
## [369] &amp;quot;Welf_NEC_Cap_Outlay&amp;quot;          &amp;quot;Welf_NEC_Current_Exp&amp;quot;        
## [371] &amp;quot;Welf_NEC_Construction&amp;quot;        &amp;quot;Welf_NEC_IG_To_State&amp;quot;        
## [373] &amp;quot;Welf_NEC_IG_Local_Govts&amp;quot;      &amp;quot;Sewerage_Total_Expend&amp;quot;       
## [375] &amp;quot;Sewerage_Direct_Expend&amp;quot;       &amp;quot;Sewerage_Cap_Outlay&amp;quot;         
## [377] &amp;quot;Sewerage_Current_Exp&amp;quot;         &amp;quot;Sewerage_Construction&amp;quot;       
## [379] &amp;quot;Sewerage_IG_To_State&amp;quot;         &amp;quot;Sewerage_IG_Local_Govts&amp;quot;     
## [381] &amp;quot;SW_Mgmt_Total_Expend&amp;quot;         &amp;quot;SW_Mgmt_Direct_Expend&amp;quot;       
## [383] &amp;quot;SW_Mgmt_Capital_Outlay&amp;quot;       &amp;quot;SW_Mgmt_Current_Exp&amp;quot;         
## [385] &amp;quot;SW_Mgmt_Construction&amp;quot;         &amp;quot;SW_Mgmt_IG_To_State&amp;quot;         
## [387] &amp;quot;SW_Mgmt_IG_Local_Govts&amp;quot;       &amp;quot;Water_Trans_Total_Exp&amp;quot;       
## [389] &amp;quot;Water_Trans_Direct_Exp&amp;quot;       &amp;quot;Water_Trans_Cap_Outlay&amp;quot;      
## [391] &amp;quot;Water_Trans_Current_Exp&amp;quot;      &amp;quot;Water_Trans_Construct&amp;quot;       
## [393] &amp;quot;Water_Trans_IG_To_Sta&amp;quot;        &amp;quot;Water_Trans_IG_Loc_Govts&amp;quot;    
## [395] &amp;quot;Interest_on_Gen_Debt&amp;quot;         &amp;quot;General_NEC_Total_Exp&amp;quot;       
## [397] &amp;quot;General_NEC_Direct_Exp&amp;quot;       &amp;quot;VetBonus&amp;quot;                    
## [399] &amp;quot;General_NEC_Cap_Outlay&amp;quot;       &amp;quot;General_NEC_Current_Exp&amp;quot;     
## [401] &amp;quot;General_NEC_Construct&amp;quot;        &amp;quot;General_NEC_IG_To_St&amp;quot;        
## [403] &amp;quot;General_NEC_IG_Loc_Govts&amp;quot;     &amp;quot;General_NEC_IG_To_Fed&amp;quot;       
## [405] &amp;quot;Liquor_Stores_Tot_Exp&amp;quot;        &amp;quot;Liquor_Stores_Cap_Out&amp;quot;       
## [407] &amp;quot;Liquor_Stores_Current_Exp&amp;quot;    &amp;quot;Liquor_Stores_Constr&amp;quot;        
## [409] &amp;quot;Total_Util_Total_Exp&amp;quot;         &amp;quot;Total_Util_Inter_Exp&amp;quot;        
## [411] &amp;quot;Total_Util_Cap_Outlay&amp;quot;        &amp;quot;Total_Util_Current_Exp&amp;quot;      
## [413] &amp;quot;Total_Util_Construct&amp;quot;         &amp;quot;Water_Util_Total_Exp&amp;quot;        
## [415] &amp;quot;Water_Util_Inter_Exp&amp;quot;         &amp;quot;Water_Util_Cap_Outlay&amp;quot;       
## [417] &amp;quot;Water_Util_Current_Exp&amp;quot;       &amp;quot;Water_Util_Construct&amp;quot;        
## [419] &amp;quot;Elec_Util_Total_Exp&amp;quot;          &amp;quot;Elec_Util_Inter_Exp&amp;quot;         
## [421] &amp;quot;Elec_Util_Cap_Outlay&amp;quot;         &amp;quot;Elec_Util_Current_Exp&amp;quot;       
## [423] &amp;quot;Elec_Util_Construct&amp;quot;          &amp;quot;Gas_Util_Total_Exp&amp;quot;          
## [425] &amp;quot;Gas_Util_Inter_Exp&amp;quot;           &amp;quot;Gas_Util_Cap_Outlay&amp;quot;         
## [427] &amp;quot;Gas_Util_Current_Exp&amp;quot;         &amp;quot;Gas_Util_Construct&amp;quot;          
## [429] &amp;quot;Trans_Util_Total_Exp&amp;quot;         &amp;quot;Trans_Util_Inter_Exp&amp;quot;        
## [431] &amp;quot;Trans_Util_Cap_Outlay&amp;quot;        &amp;quot;Trans_Util_Current_Exp&amp;quot;      
## [433] &amp;quot;Trans_Util_Construct&amp;quot;         &amp;quot;Emp_Ret_Total_Expend&amp;quot;        
## [435] &amp;quot;Emp_Ret_Benefit_Paymts&amp;quot;       &amp;quot;Emp_Ret_Withdrawals&amp;quot;         
## [437] &amp;quot;Emp_Ret_Other_Paymts&amp;quot;         &amp;quot;Unemp_Comp_Total_Exp&amp;quot;        
## [439] &amp;quot;Unemp_Comp_Ben_Paymts&amp;quot;        &amp;quot;Unemp_Ext___Spec_Pmts&amp;quot;       
## [441] &amp;quot;Total_Debt_Outstanding&amp;quot;       &amp;quot;Total_Long_Term_Debt_Out&amp;quot;    
## [443] &amp;quot;ST_Debt_End_of_Year&amp;quot;          &amp;quot;Total_Beg_LTD_Out&amp;quot;           
## [445] &amp;quot;Beg_LTD_Out_Private_Purp&amp;quot;     &amp;quot;Beg_LTD_Out_All_Other&amp;quot;       
## [447] &amp;quot;Beg_LTD_Out_Utility&amp;quot;          &amp;quot;Beg_LTD_Out_Water_Util&amp;quot;      
## [449] &amp;quot;Beg_LTD_Out_Elec_Util&amp;quot;        &amp;quot;Beg_LTD_Out_Gas_Util&amp;quot;        
## [451] &amp;quot;Beg_LTD_Out_Trans_Util&amp;quot;       &amp;quot;Beg_LTD_Out_General&amp;quot;         
## [453] &amp;quot;Beg_LTD_Out_Education&amp;quot;        &amp;quot;Beg_LTD_Out_Priv_Purp&amp;quot;       
## [455] &amp;quot;Beg_LTD_Out_Other_NEC&amp;quot;        &amp;quot;Total_LTD_Issued&amp;quot;            
## [457] &amp;quot;LTD_Iss_Private_Purp&amp;quot;         &amp;quot;LTD_Iss_All_Other&amp;quot;           
## [459] &amp;quot;LTD_Iss_Utility&amp;quot;              &amp;quot;LTD_Iss_Util_Water&amp;quot;          
## [461] &amp;quot;LTD_Iss_Util_Electric&amp;quot;        &amp;quot;LTD_Iss_Util_Gas_Supply&amp;quot;     
## [463] &amp;quot;LTD_Iss_Util_Transit&amp;quot;         &amp;quot;LTD_Iss_General&amp;quot;             
## [465] &amp;quot;LTD_Iss_Gen_Elem_Educ&amp;quot;        &amp;quot;LTD_Iss_Gen_Other_Educ&amp;quot;      
## [467] &amp;quot;LTD_Iss_Gen_Other_NEC&amp;quot;        &amp;quot;Total_LTD_Iss_FFC&amp;quot;           
## [469] &amp;quot;LTD_Iss_FFC_Utility&amp;quot;          &amp;quot;LTD_Iss_FFC_Water_Util&amp;quot;      
## [471] &amp;quot;LTD_Iss_FFC_Elec_Util&amp;quot;        &amp;quot;LTD_Iss_FFC_Gas_Util&amp;quot;        
## [473] &amp;quot;LTD_Iss_FFC_Trans_Util&amp;quot;       &amp;quot;LTD_Iss_FFC_General&amp;quot;         
## [475] &amp;quot;LTD_Iss_FFC_Elem_Educ&amp;quot;        &amp;quot;LTD_Iss_FFC_Other_Educ&amp;quot;      
## [477] &amp;quot;LTD_Iss_FFC_Other_NEC&amp;quot;        &amp;quot;Total_LTD_Iss_NG&amp;quot;            
## [479] &amp;quot;LTD_Iss_NG_Utility&amp;quot;           &amp;quot;LTD_Iss_NG_Water_Util&amp;quot;       
## [481] &amp;quot;LTD_Iss_NG_Elec_Util&amp;quot;         &amp;quot;LTD_Iss_NG_Gas_Util&amp;quot;         
## [483] &amp;quot;LTD_Iss_NG_Trans_Util&amp;quot;        &amp;quot;LTD_Iss_NG_General&amp;quot;          
## [485] &amp;quot;LTD_Iss_NG_Elem_Educ&amp;quot;         &amp;quot;LTD_Iss_NG_Other_Educ&amp;quot;       
## [487] &amp;quot;LTD_Iss_NG_Private_Purp&amp;quot;      &amp;quot;LTD_Iss_NG_Other_NEC&amp;quot;        
## [489] &amp;quot;Total_LTD_Iss_Unsp&amp;quot;           &amp;quot;LTD_Iss_Unsp_Utility&amp;quot;        
## [491] &amp;quot;LTD_Iss_Unsp_Water_Util&amp;quot;      &amp;quot;LTD_Iss_Unsp_Elec_Util&amp;quot;      
## [493] &amp;quot;LTD_Iss_Unsp_Gas_Util&amp;quot;        &amp;quot;LTD_Iss_Unsp_Trans_Util&amp;quot;     
## [495] &amp;quot;LTD_Iss_Unsp_General&amp;quot;         &amp;quot;LTD_Iss_Unsp_Elem_Educ&amp;quot;      
## [497] &amp;quot;LTD_Iss_Unsp_Other_Educ&amp;quot;      &amp;quot;LTD_Iss_Unsp_Other_NEC&amp;quot;      
## [499] &amp;quot;Total_LTD_Retired&amp;quot;            &amp;quot;LTD_Ret_Private_Purp&amp;quot;        
## [501] &amp;quot;LTD_Ret_All_Other&amp;quot;            &amp;quot;LTD_Ret_Utility&amp;quot;             
## [503] &amp;quot;LTD_Ret_Util_Water&amp;quot;           &amp;quot;LTD_Ret_Util_Electric&amp;quot;       
## [505] &amp;quot;LTD_Ret_Util_Gas_Supply&amp;quot;      &amp;quot;LTD_Ret_Util_Transit&amp;quot;        
## [507] &amp;quot;LTD_Ret_General&amp;quot;              &amp;quot;LTD_Ret_Gen_Elem_Educ&amp;quot;       
## [509] &amp;quot;LTD_Ret_Gen_Other_Educ&amp;quot;       &amp;quot;LTD_Ret_Gen_Other_NEC&amp;quot;       
## [511] &amp;quot;Total_LTD_Ret_FFC&amp;quot;            &amp;quot;LTD_Ret_FFC_Utility&amp;quot;         
## [513] &amp;quot;LTD_Ret_FFC_Water_Util&amp;quot;       &amp;quot;LTD_Ret_FFC_Elec_Util&amp;quot;       
## [515] &amp;quot;LTD_Ret_FFC_Gas_Util&amp;quot;         &amp;quot;LTD_Ret_FFC_Trans_Util&amp;quot;      
## [517] &amp;quot;LTD_Ret_FFC_General&amp;quot;          &amp;quot;LTD_Ret_FFC_Elem_Educ&amp;quot;       
## [519] &amp;quot;LTD_Ret_FFC_Other_Educ&amp;quot;       &amp;quot;LTD_Ret_FFC_Other_NEC&amp;quot;       
## [521] &amp;quot;Total_LTD_Ret_NG&amp;quot;             &amp;quot;LTD_Ret_NG_Utility&amp;quot;          
## [523] &amp;quot;LTD_Ret_NG_Water_Util&amp;quot;        &amp;quot;LTD_Ret_NG_Elec_Util&amp;quot;        
## [525] &amp;quot;LTD_Ret_NG_Gas_Util&amp;quot;          &amp;quot;LTD_Ret_NG_Trans_Util&amp;quot;       
## [527] &amp;quot;LTD_Ret_NG_General&amp;quot;           &amp;quot;LTD_Ret_NG_Elem_Educ&amp;quot;        
## [529] &amp;quot;LTD_Ret_NG_Other_Educ&amp;quot;        &amp;quot;LTD_Ret_NG_Private_Purp&amp;quot;     
## [531] &amp;quot;LTD_Ret_NG_Other_NEC&amp;quot;         &amp;quot;Total_LTD_Ret_Unsp&amp;quot;          
## [533] &amp;quot;LTD_Ret_Unsp_Utility&amp;quot;         &amp;quot;LTD_Ret_Unsp_Water_Util&amp;quot;     
## [535] &amp;quot;LTD_Ret_Unsp_Elec_Utili&amp;quot;      &amp;quot;LTD_Ret_Unsp_Gas_Util&amp;quot;       
## [537] &amp;quot;LTD_Ret_Unsp_Trans_Util&amp;quot;      &amp;quot;LTD_Ret_Unsp_General&amp;quot;        
## [539] &amp;quot;LTD_Ret_Unsp_Elem_Educ&amp;quot;       &amp;quot;LTD_Ret_Unsp_Other_Educ&amp;quot;     
## [541] &amp;quot;LTD_Ret_Unsp_Other_NEC&amp;quot;       &amp;quot;Total_LTD_Out&amp;quot;               
## [543] &amp;quot;LTD_Out_Private_Purp&amp;quot;         &amp;quot;LTD_Out_All_Other&amp;quot;           
## [545] &amp;quot;Total_LTD_Out_Utility&amp;quot;        &amp;quot;LTD_Out_Util_Water&amp;quot;          
## [547] &amp;quot;LTD_Out_Util_Electric&amp;quot;        &amp;quot;LTD_Out_Util_Gas_Supply&amp;quot;     
## [549] &amp;quot;LTD_Out_Util_Transit&amp;quot;         &amp;quot;LTD_Out_General&amp;quot;             
## [551] &amp;quot;LTD_Out_Gen_Elem_Educ&amp;quot;        &amp;quot;LTD_Out_Gen_Other_Educ&amp;quot;      
## [553] &amp;quot;LTD_Out_Gen_Other_NEC&amp;quot;        &amp;quot;Total_LTD_Out_FFC&amp;quot;           
## [555] &amp;quot;LTD_Out_FFC_Utility&amp;quot;          &amp;quot;LTD_Out_FFC_Water_Util&amp;quot;      
## [557] &amp;quot;LTD_Out_FFC_Elec_Util&amp;quot;        &amp;quot;LTD_Out_FFC_Gas_Util&amp;quot;        
## [559] &amp;quot;LTD_Out_FFC_Trans_Util&amp;quot;       &amp;quot;LTD_Out_FFC_General&amp;quot;         
## [561] &amp;quot;LTD_Out_FFC_Elem_Educ&amp;quot;        &amp;quot;LTD_Out_FFC_Other_Educ&amp;quot;      
## [563] &amp;quot;LTD_Out_FFC_Other_NEC&amp;quot;        &amp;quot;Tot_LTD_Out_NG&amp;quot;              
## [565] &amp;quot;LTD_Out_NG_Utility&amp;quot;           &amp;quot;LTD_Out_NG_Water_Util&amp;quot;       
## [567] &amp;quot;LTD_Out_NG_Elec_Util&amp;quot;         &amp;quot;LTD_Out_NG_Gas_Util&amp;quot;         
## [569] &amp;quot;LTD_Out_NG_Trans_Util&amp;quot;        &amp;quot;LTD_Out_NG_General&amp;quot;          
## [571] &amp;quot;LTD_Out_NG_Elem_Educ&amp;quot;         &amp;quot;LTD_Out_NG_Other_Educ&amp;quot;       
## [573] &amp;quot;LTD_Out_NG_Private_Purp&amp;quot;      &amp;quot;LTD_Out_NG_Other_NEC&amp;quot;        
## [575] &amp;quot;Total_Cash___Securities&amp;quot;      &amp;quot;Insur_Trust_Cash___Sec&amp;quot;      
## [577] &amp;quot;Emp_Retire_Cash___Sec&amp;quot;        &amp;quot;Emp_Retire_Cash___Dep&amp;quot;       
## [579] &amp;quot;Emp_Retire_Total_Sec&amp;quot;         &amp;quot;Emp_Retire_Sec_Tot_Fed&amp;quot;      
## [581] &amp;quot;Emp_Retire_Sec_S_L_Secur&amp;quot;     &amp;quot;Emp_Retire_Sec_Tot_Nong&amp;quot;     
## [583] &amp;quot;Emp_Retire_Sec_Corp_Bds&amp;quot;      &amp;quot;Emp_Retire_Sec_Corp_Stk&amp;quot;     
## [585] &amp;quot;Emp_Retire_Sec_Mortgages&amp;quot;     &amp;quot;Emp_Retire_Sec_Misc_Inv&amp;quot;     
## [587] &amp;quot;Emp_Retire_Sec_Oth_Nong&amp;quot;      &amp;quot;Unemp_Comp_Cash___Sec&amp;quot;       
## [589] &amp;quot;Unemp_Comp_Bal_In_US_Trs&amp;quot;     &amp;quot;Unemp_Comp_Other_Balance&amp;quot;    
## [591] &amp;quot;Nonin_Trust_Cash___Sec&amp;quot;       &amp;quot;Sinking_Fd_Cash___Sec&amp;quot;       
## [593] &amp;quot;Bond_Fd_Cash___Sec&amp;quot;           &amp;quot;Oth_Nonin_Fd_Cash___Sec&amp;quot;     
## [595] &amp;quot;NameFixed&amp;quot;                    &amp;quot;NameFLower&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;revenues-per-capita&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Revenues per capita&lt;/h3&gt;
&lt;p&gt;Change it up with a recalcalculation of the data and a new map.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my.GFD.2015 &amp;lt;- State.Data %&amp;gt;% 
  filter(Year4==2015) %&amp;gt;%
  mutate(value = Total_Revenue / Population, region = NameFLower) %&amp;gt;%
  select(region, value)
state_choropleth(my.GFD.2015, title=&amp;quot;Total Revenues per capita&amp;quot;, num_colors=1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in self$bind(): The following regions were missing and are being
## set to NA: district of columbia&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-25-mapping-with-the-government-finance-database_files/figure-html/Finished2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;putting-them-together-counties&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Putting them together: Counties&lt;/h1&gt;
&lt;p&gt;This part is slightly harder. It would appear as though the Government Finance Data doesn’t have a combined FIPS code; this is the region in map. But, the data contain the state and county fips codes and we can recreate them with the state code times 1000 plus the county. After that, plot the General Revenue.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;County.Data.2 &amp;lt;- read.csv(&amp;quot;~/Downloads/TheGovernmentFinanceDatabase_CountyData/CountyData.csv&amp;quot;)
County.Data.2 &amp;lt;- County.Data.2 %&amp;gt;% mutate(region = FIPS_Code_State* 1000 + FIPS_County)
my.County.GFD.2015 &amp;lt;- County.Data.2 %&amp;gt;% 
  filter(Year4==2012) %&amp;gt;% mutate(value = General_Revenue / Population) %&amp;gt;%
  select(region, value)
county_choropleth(my.County.GFD.2015, title=&amp;quot;General Revenue per capita&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-25-mapping-with-the-government-finance-database_files/figure-html/County1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The zoom feature is pretty cool: there are two defined forms for the county and states. The naming conventions follow the &lt;code&gt;county.regions&lt;/code&gt; format and are lower case. Let me grab &lt;em&gt;oregon&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my.County.GFD.2015 &amp;lt;- County.Data.2 %&amp;gt;% 
  filter(Year4==2012) %&amp;gt;% mutate(value = General_Revenue / Population) %&amp;gt;%
  select(region, value)
county_choropleth(my.County.GFD.2015, title=&amp;quot;General Revenue per capita&amp;quot;, state_zoom=&amp;quot;oregon&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-25-mapping-with-the-government-finance-database_files/figure-html/CountyMZ-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Longitudinal Panel Data R Packages</title>
      <link>/post/panel-data-r-packages/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/panel-data-r-packages/</guid>
      <description>&lt;div id=&#34;longitudinal-and-panel-data-analysis-in-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Longitudinal and Panel Data Analysis in R&lt;/h1&gt;
&lt;p&gt;Goal: A CRAN task view for panel/longitudinal data analysis in R.&lt;/p&gt;
&lt;div id=&#34;what-is-panel-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is Panel Data?&lt;/h2&gt;
&lt;p&gt;Panel data are variously called longitudinal, panel, cross-sectional time series, and pooled time series data. The most precise definition is two-dimensional data; invariably one of the dimensions is time. We can think about a general depiction of what a model with linear coefficients typical for such data structures, though ridiculously overparameterized, like so:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ y_{it} = \alpha_{it} + X_{it}\beta_{it} + \epsilon_{it} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For example, suppose that we have a set of countries, or US states, municipalities in a state, or even individual people, indexed by &lt;span class=&#34;math inline&#34;&gt;\(i \in N\)&lt;/span&gt;. We observe those data at &lt;span class=&#34;math inline&#34;&gt;\(t \in T\)&lt;/span&gt; points in time. To be clear, a standard cross-section of data in this notation suppresses &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; because there is no observed over time variation. A single time series suppresses the &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;. Of course, &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt; are greater than 1.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;common-transformations-anova&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Common transformations: ANOVA&lt;/h2&gt;
&lt;p&gt;There are common transformations undertaken on the data prior to analysis. For example, the &lt;em&gt;within&lt;/em&gt; transformation that underlies a &lt;em&gt;fixed effects&lt;/em&gt; regression model transforms each vector of data (for &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;) as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ x^{W}_{it} = x_{it} - \overline{x}_{i} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The within-transformed data are of identical dimensions to the untransformed data. The other common transformation isolates the &lt;span class=&#34;math inline&#34;&gt;\(n-vector\)&lt;/span&gt; of unit means – the so-called &lt;em&gt;between&lt;/em&gt; transformation.&lt;/p&gt;
&lt;p&gt;Because the dimensions are non-overlapping/orthogonal; the key result in the applied statistics shows that the total variation in a variable &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; is the sum of the &lt;em&gt;within&lt;/em&gt; variance and the &lt;em&gt;between&lt;/em&gt; variance.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;some-basic-summary&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Some Basic Summary&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;dplyr&lt;/em&gt; makes the basic summary and presentation quite straightforward. &lt;code&gt;plm&lt;/code&gt; contains a few datasets; I will choose an excerpt from Summers and Heston’s Penn World Tables – &lt;em&gt;SumHes&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(plm)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Formula&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ──────────────────────────────────────────────────────────────────────────── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 2.2.1     ✔ purrr   0.2.4
## ✔ tibble  1.3.4     ✔ dplyr   0.7.4
## ✔ tidyr   0.7.2     ✔ stringr 1.3.0
## ✔ readr   1.1.1     ✔ forcats 0.2.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ─────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::between() masks plm::between()
## ✖ dplyr::filter()  masks stats::filter()
## ✖ dplyr::lag()     masks plm::lag(), stats::lag()
## ✖ dplyr::lead()    masks plm::lead()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
data(SumHes)
summary(SumHes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       year              country      opec       com      
##  Min.   :1960   ALGERIA     :  26   no :3146   no :3120  
##  1st Qu.:1966   ANGOLA      :  26   yes: 104   yes: 130  
##  Median :1972   BENIN       :  26                        
##  Mean   :1972   BOTSWANA    :  26                        
##  3rd Qu.:1979   BURKINA FASO:  26                        
##  Max.   :1985   BURUNDI     :  26                        
##                 (Other)     :3094                        
##       pop               gdp              sr       
##  Min.   :     42   Min.   :  257   Min.   :-4.50  
##  1st Qu.:   2266   1st Qu.:  942   1st Qu.: 8.90  
##  Median :   5919   Median : 1957   Median :16.30  
##  Mean   :  29436   Mean   : 3400   Mean   :16.91  
##  3rd Qu.:  18529   3rd Qu.: 4640   3rd Qu.:24.10  
##  Max.   :1051013   Max.   :16570   Max.   :45.50  
## &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To actually summarize the data in an appropriate fashion, we will use &lt;em&gt;dplyr&lt;/em&gt; and &lt;em&gt;summarise&lt;/em&gt; after grouping the data by &lt;em&gt;country&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Sum.Table &amp;lt;- SumHes %&amp;gt;%
              group_by(country) %&amp;gt;%
              summarise(mean.gdp=mean(gdp),sd.w.gdp=sd(gdp), mean.pop=mean(pop), sd.w.pop=sd(pop), mean.sr=mean(sr), sd.w.sr=sd(sr))
Sum.Table&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 125 x 7
##           country  mean.gdp  sd.w.gdp   mean.pop   sd.w.pop   mean.sr
##            &amp;lt;fctr&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1        ALGERIA 2143.0385 551.36402 15346.5769 3430.01994 21.811538
##  2         ANGOLA  904.4615 209.14573  6456.6538 1160.09175  3.638462
##  3          BENIN 1094.1538  55.27654  2904.7308  596.99464  6.492308
##  4       BOTSWANA 1198.6923 576.04470   722.3077  183.67379 19.765385
##  5   BURKINA FASO  425.8077  42.87565  5997.0769 1023.43984  6.880769
##  6        BURUNDI  471.1154  63.99645  3637.4615  541.38646  4.403846
##  7       CAMEROON  917.8077 257.73491  7230.4615 1457.02143  7.776923
##  8 CAPE VERDE IS.  631.1923 198.28263   264.6923   34.50422 23.603846
##  9 CENTRAL AFR.R.  697.0385  45.59954  2016.3077  307.93113  6.803846
## 10           CHAD  623.6538 146.39233  3909.3462  590.55811  2.084615
## # ... with 115 more rows, and 1 more variables: sd.w.sr &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;models-for-panel-data-standard-models-in-plm&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Models for panel data: Standard models in &lt;em&gt;plm()&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;The workhorse package/library for the basic panel data models in R is &lt;em&gt;plm&lt;/em&gt;. The &lt;em&gt;JStatSoft&lt;/em&gt; &lt;a href=&#34;https://cran.r-project.org/web/packages/plm/vignettes/plm.pdf&#34;&gt;article was modified to become the vignette&lt;/a&gt; and is quite detailed, though dated. The previous equation can be simplified and detailed to derive the commonly deployed models.&lt;/p&gt;
&lt;div id=&#34;a-pooled-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Pooled Regression&lt;/h3&gt;
&lt;p&gt;Simply suppresses all subscripts on &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; to write:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ y_{it} = \alpha + X_{it}\beta + \epsilon_{it} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-within-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Within Regression&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ y_{it} = \alpha + X_{it}\beta^{W} + \epsilon^{W}_{it} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-between-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A Between Regression&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \overline{y}_{i} = \alpha + \overline{X}_{i}\beta^{B} + \epsilon^{B}_{i} \]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;models-with-heterogeneous-time-trends-phtt&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Models with heterogeneous time trends: &lt;em&gt;phtt()&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;An &lt;a href=&#34;https://arxiv.org/pdf/1407.6484.pdf&#34;&gt;article&lt;/a&gt; on panel data analysis with heterogeneous time trends appears in &lt;em&gt;JStatSoft&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multi-state-models-in-continuous-time-msm&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Multi-state models in continuous time &lt;em&gt;msm()&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;The &lt;em&gt;msm&lt;/em&gt; library fits homogenous and inhomogenous Markov models for multinomial outcomes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;latent-markov-models-with-lmest&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Latent Markov models with &lt;em&gt;LMest()&lt;/em&gt;&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;LM models are designed to deal with univariate and multivariate longitudinal data based on the repeated observation of a panel of subjects across time. More in detail, LM models are specially tailored to study the evolution of an individual characteristic of interest that is not directly observable. This characteristic is represented by a latent process following a Markov chain as in a Hidden Markov (HM) model (Zucchini and MacDonald, 2009). These models also allow us to account for time-varying unobserved heterogeneity in addition to the effect of observable covariates on the response variables.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&#34;https://arxiv.org/pdf/1501.04448.pdf&#34;&gt;preprint&lt;/a&gt; is here.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Black Boxes: A Gender Gap Example</title>
      <link>/post/black-boxes-a-gender-gap-example/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/black-boxes-a-gender-gap-example/</guid>
      <description>&lt;div id=&#34;variance-in-the-outcome-the-black-box&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Variance in the Outcome: The Black Box&lt;/h2&gt;
&lt;p&gt;Regression models engage an exercise in variance accounting. How much of the outcome is explained by the inputs, individually (slope divided by standard error is t) and collectively (Average explained/Average unexplained with averaging over degrees of freedom is F). This, of course, assumes normal errors. This document provides a function for making use of the black box. Just as in common parlance, a black box is the unexplained. Let’s take an example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;options(scipen=10)
OregonSalaries &amp;lt;- structure(list(Obs = 1:32, Salary = c(41514.38701, 40964.06985, 
39170.19178, 37936.57206, 33981.77752, 36077.27107, 39174.05733, 
39037.372, 29131.74865, 36200.44592, 38561.3987, 33247.92306, 
33609.4874, 33669.22275, 37805.83017, 35846.13454, 47342.65909, 
46382.3851, 45812.91029, 46409.65664, 43796.05285, 43124.02135, 
49443.81792, 44805.79217, 44440.32001, 46679.59218, 47337.09786, 
47298.72531, 41461.0474, 43598.293, 43431.18499, 49266.41189), 
    Gender = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
    2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L), .Label = c(&amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;
    ), class = &amp;quot;factor&amp;quot;)), .Names = c(&amp;quot;Obs&amp;quot;, &amp;quot;Salary&amp;quot;, &amp;quot;Gender&amp;quot;
), class = &amp;quot;data.frame&amp;quot;, row.names = c(NA, -32L))
black.box.maker &amp;lt;- function(mod1) {
            d1 &amp;lt;- dim(mod1$model)[[1]]
            sumsq1 &amp;lt;- var(mod1$model[,1], na.rm=TRUE)*(d1-1)
            rt1 &amp;lt;- sqrt(sumsq1)
            sumsq2 &amp;lt;- var(mod1$fitted.values, na.rm=TRUE)*(d1-1)
            rsquare &amp;lt;- round(sumsq2/sumsq1, digits=4)
            rt2 &amp;lt;- sqrt(sumsq2)
            plot(x=NA, y=NA, xlim=c(0,rt1), ylim=c(0,rt1), main=paste(&amp;quot;R-squared:&amp;quot;,rsquare), xlab=&amp;quot;&amp;quot;, ylab=&amp;quot;&amp;quot;, bty=&amp;quot;n&amp;quot;, cex=0.5)
            polygon(x=c(0,0,rt1,rt1), y=c(0,rt1,rt1,0), col=&amp;quot;black&amp;quot;)
            polygon(x=c(0,0,rt2,rt2), y=c(0,rt2,rt2,0), col=&amp;quot;green&amp;quot;)
            }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OregonSalaries contains 32 observations: 16 males and 16 females. The mean of all salaries is 41142.433; let me put that in a plot in blue. The total sum of squares can be represented as the sum of all the squared distances to the blue line; each vertical distance is demarcated with an arrow below in blue. The distance from the point to the line is also shown in blue. It simply shows how far that individual’s salary is from the overall average. The total sum of squares: the total area of the black box in the original metric (squared dollars) is: 892955385.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ORSalScale &amp;lt;- scale(OregonSalaries$Salary, scale=FALSE)
plot(y=OregonSalaries$Salary, x=c(1:32), ylab=&amp;quot;Salary&amp;quot;, col=as.factor(OregonSalaries$Gender), xlab=&amp;quot;&amp;quot;, pch=c(rep(&amp;quot;F&amp;quot;,16),rep(&amp;quot;M&amp;quot;,16)))
abline(h=mean(OregonSalaries$Salary), col=&amp;quot;blue&amp;quot;)
arrows(x0=c(1:32), x1=c(1:32), y1=OregonSalaries$Salary,y0=mean(OregonSalaries$Salary), col=&amp;quot;blue&amp;quot;, code=3, length=0.05)
text(x=seq(1,16), y=rep(c(47000,48000,49000,50000),4), labels = paste(ceiling(ORSalScale[c(1:16)])), cex=0.7, col=&amp;quot;blue&amp;quot;)
text(x=c(17:32), y=rep(c(30000,31000,32000,33000),4), labels = paste(ceiling(ORSalScale[c(17:32)])), cex=0.7, col=&amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-black-boxes-a-gender-gap-example_files/figure-html/PlotG-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;invoking-the-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Invoking the Function&lt;/h2&gt;
&lt;p&gt;To represent the black box,let me draw it. The length of each side will be the square root of the black box; our total sum of squares is just under 900 million squared dollars so each side will be approximately 30000. The box appears below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mod1 &amp;lt;- lm(Salary~1, data=OregonSalaries)
black.box.maker(mod1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-black-boxes-a-gender-gap-example_files/figure-html/BBBase-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-regression-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A Regression Model&lt;/h2&gt;
&lt;p&gt;First, a regression model. I will estimate the following regression:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ Salary_{i} = \alpha + \beta_{1}*Gender_{i} + \epsilon \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;What does the regression imply? That salary for each individual &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; is a function of a constant and gender. Given the way that R works, &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt; will represent the average for females and &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; will represent the difference between male and female average salaries. The &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt; will capture the difference between the individual salary and the group mean (the mean of males or females).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-new-residual-sum-of-squares&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A New Residual Sum of Squares&lt;/h2&gt;
&lt;p&gt;The picture will now have a red line and a black line and the residual/leftover/unexplained sum of squares is now the difference between the point and the respective vertical line (red arrows or black arrows). What is the relationship between the datum and the group mean? The answer is shown in black/red. The sum of the remaining squared vertical distances is 238621277 is obtained by squaring the difference between each black/red number. The amount explained by gender is the difference between each blue and the respective black/red number. It is important to notice that the highest paid females and the lowest paid males may be less well explained by two averages but the different averages, overall, lead to far less explained variation than a single average for all salaries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resids &amp;lt;- residuals(lm(Salary~Gender, data=OregonSalaries))
plot(y=OregonSalaries$Salary, x=c(1:32), ylab=&amp;quot;Salary&amp;quot;, col=as.factor(OregonSalaries$Gender), xlab=&amp;quot;&amp;quot;, pch=c(rep(&amp;quot;F&amp;quot;,16),rep(&amp;quot;M&amp;quot;,16)))
abline(h=mean(OregonSalaries$Salary), col=&amp;quot;blue&amp;quot;)
abline(h=mean(subset(OregonSalaries, Gender==&amp;quot;Female&amp;quot;)$Salary, na.rm=T), col=&amp;quot;black&amp;quot;)
abline(h=mean(subset(OregonSalaries, Gender==&amp;quot;Male&amp;quot;)$Salary, na.rm=T), col=&amp;quot;red&amp;quot;)
arrows(x0=c(1:32), x1=c(1:32), y1=OregonSalaries$Salary,y0=mean(OregonSalaries$Salary), col=&amp;quot;blue&amp;quot;, code=3, length=0.05)
arrows(x0=c(1:16), x1=c(1:16), y1=OregonSalaries$Salary[c(1:16)],y0=mean(subset(OregonSalaries, Gender==&amp;quot;Female&amp;quot;)$Salary, na.rm=T), col=&amp;quot;black&amp;quot;, code=3, length=0.05)
arrows(x0=c(17:32), x1=c(17:32), y1=OregonSalaries$Salary[c(17:32)],y0=mean(subset(OregonSalaries, Gender==&amp;quot;Male&amp;quot;)$Salary, na.rm=T), col=&amp;quot;red&amp;quot;, code=3, length=0.05)
text(x=seq(1,16), y=rep(c(47000,48000,49000,50000),4), labels = paste(ceiling(ORSalScale[c(1:16)])), cex=0.7, col=&amp;quot;blue&amp;quot;)
text(x=c(17:32), y=rep(c(30000,31000,32000,33000),4), labels = paste(ceiling(ORSalScale[c(17:32)])), cex=0.7, col=&amp;quot;blue&amp;quot;)
text(x=seq(1,16), y=rep(c(42000,43000,44000,45000),4), labels = paste(ceiling(resids[c(1:16)])), cex=0.7, col=&amp;quot;black&amp;quot;)
text(x=c(17:32), y=rep(c(36000,37000,38000,39000),4), labels = paste(ceiling(resids[c(17:32)])), cex=0.7, col=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-black-boxes-a-gender-gap-example_files/figure-html/BasePlot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The details of the regression estimates and the analysis of variance – the sums of squares – completes the rendering.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mod1 &amp;lt;- lm(Salary~Gender, data=OregonSalaries)
black.box.maker(mod1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-black-boxes-a-gender-gap-example_files/figure-html/BBReg-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(mod1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Salary ~ Gender, data = OregonSalaries)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -7488.7 -2107.9   433.3  1743.9  4893.9 
## 
## Coefficients:
##             Estimate Std. Error t value       Pr(&amp;gt;|t|)    
## (Intercept)  36620.5      705.1   51.94        &amp;lt; 2e-16 ***
## GenderMale    9043.9      997.1    9.07 0.000000000422 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 2820 on 30 degrees of freedom
## Multiple R-squared:  0.7328, Adjusted R-squared:  0.7239 
## F-statistic: 82.26 on 1 and 30 DF,  p-value: 0.0000000004223&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anova(mod1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Analysis of Variance Table
## 
## Response: Salary
##           Df    Sum Sq   Mean Sq F value          Pr(&amp;gt;F)    
## Gender     1 654334108 654334108  82.264 0.0000000004223 ***
## Residuals 30 238621277   7954043                            
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Correlation Function</title>
      <link>/post/correlation-function/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/correlation-function/</guid>
      <description>&lt;div id=&#34;correlations-and-the-impact-on-sums-and-differences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Correlations and the Impact on Sums and Differences&lt;/h1&gt;
&lt;p&gt;I will use a simple R function to illustrate the effect of correlation on sums and differences of random variables. In general, the variance [and standard deviation] of a sum of random variables is the variance of the individual variables plus twice the covariance; the variance [and standard deviation] of a difference in random variables is the variance of the individual variables minus twice the (signed) covariance.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ Var (\sum_{i=1}^{n} X_{i}) = \sum_{i=1}^{n} Var(X_{i}) + 2 \sum_{1 \leq i \leq j \leq n} Cov(X_{i},X_{j}) \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now for the function and two examples.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;correlation-is-0.8&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Correlation is 0.8&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(MASS)
plot.cor &amp;lt;- function(cor) {
  if(-1 &amp;lt; cor &amp;amp; cor &amp;lt; 1) {
mean.vec &amp;lt;- c(0,0)
sig.mat &amp;lt;- matrix(c(1,cor,cor,1), nrow=2)
df &amp;lt;- data.frame(mvrnorm(n=1000, mean.vec, sig.mat))
df$sum &amp;lt;- rowSums(df)
df$diff &amp;lt;- with(df, X1-X2)
plot(x=df$X1, y=df$X2, xlab=&amp;quot;x1&amp;quot;, ylab=&amp;quot;x2&amp;quot;, main=paste(&amp;quot;Correlation:&amp;quot;,cor), sub=paste(&amp;quot;Std. Dev: Sum&amp;quot;,round(sd(df$sum), digits=3),&amp;quot; Difference:&amp;quot;,round(sd(df$diff), digits=3)))
  }
  else { cat(&amp;quot;Correlation must be between -1 and 1&amp;quot;) }
}
plot.cor(cor=0.8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-correlation-function_files/figure-html/CorF-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The correlation above is 0.8&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;correlation-is--0.8&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Correlation is -0.8&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot.cor(cor=-0.8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-22-correlation-function_files/figure-html/CorF2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>tidytext is neat! White House Communications</title>
      <link>/post/tidytext-is-neat/</link>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tidytext-is-neat/</guid>
      <description>&lt;div id=&#34;presidential-press&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Presidential Press&lt;/h1&gt;
&lt;p&gt;The language of presidential communications is interesting and I know very little about &lt;em&gt;text as data&lt;/em&gt;. I have a number of applications in mind for these tools but I have to learn how to use them. What does the website look like?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.whitehouse.gov/news/&#34;&gt;White House News&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The site is split in four parts: all news, articles, presidential actions, and briefings and statements. The first one is a catch all and the second is news links. I will take the last two to process. To create a proper workflow, I will separate the investigation into two types of communications: briefing statements and presidential actions. For each, I will have to build a table of links and then I can extract the actual text.&lt;/p&gt;
&lt;div id=&#34;processing-the-communications-links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Processing the Communications: Links&lt;/h2&gt;
&lt;p&gt;First, let me take on briefing statements. I will build a database of URLs to then process as text. This works for the design of the White House website currently; the only relevant hard-coding is the number of browsable pages. I captured this manually.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)
n.BSt &amp;lt;- 208
BSt.seq &amp;lt;- as.list(seq(1,n.BSt))
BSt.fun &amp;lt;- function(val) {
my.URL &amp;lt;- paste(&amp;quot;https://www.whitehouse.gov/briefings-statements/page/&amp;quot;,val,&amp;quot;/&amp;quot;,sep=&amp;quot;&amp;quot;)
temp.l1 &amp;lt;- read_html(my.URL)
my.links &amp;lt;- html_nodes(temp.l1, &amp;#39;h2&amp;#39;) %&amp;gt;% html_nodes(&amp;quot;a&amp;quot;) %&amp;gt;% html_attr(&amp;#39;href&amp;#39;)
my.links2 &amp;lt;-html_nodes(temp.l1, &amp;#39;h2&amp;#39;) %&amp;gt;% html_text(&amp;quot;a&amp;quot;) 
data.frame(link=my.links,title=my.links2)
}
n.PAct &amp;lt;- 46
PAct.seq &amp;lt;- as.list(seq(1,n.PAct))
PAct.fun &amp;lt;- function(val) {
my.URL &amp;lt;- paste(&amp;quot;https://www.whitehouse.gov/presidential-actions/page/&amp;quot;,val,&amp;quot;/&amp;quot;,sep=&amp;quot;&amp;quot;)
temp.l1 &amp;lt;- read_html(my.URL)
my.links &amp;lt;- html_nodes(temp.l1, &amp;#39;h2&amp;#39;) %&amp;gt;% html_nodes(&amp;quot;a&amp;quot;) %&amp;gt;% html_attr(&amp;#39;href&amp;#39;)
my.links2 &amp;lt;-html_nodes(temp.l1, &amp;#39;h2&amp;#39;) %&amp;gt;% html_nodes(&amp;quot;a&amp;quot;) %&amp;gt;% html_text(&amp;quot;a&amp;quot;) 
data.frame(link=my.links,title=my.links2)
}
BriefState.linkset &amp;lt;- do.call(&amp;quot;rbind&amp;quot;,rapply(BSt.seq, BSt.fun, how=&amp;quot;list&amp;quot;))
PresAct.linkset &amp;lt;- do.call(&amp;quot;rbind&amp;quot;,rapply(PAct.seq,PAct.fun, how=&amp;quot;list&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I now have all the links. I cannot do much with that.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;text-extraction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Text Extraction&lt;/h2&gt;
&lt;p&gt;I will first write a simple function to download a URL and extract the text that I want.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rlist)
library(stringr)
PPR.Filter &amp;lt;- function(file) {
temp.res &amp;lt;- str_replace_all(html_text(html_nodes(file, xpath=&amp;#39;(//*[contains(concat( &amp;quot; &amp;quot;, @class, &amp;quot; &amp;quot; ), concat( &amp;quot; &amp;quot;, &amp;quot;editor&amp;quot;, &amp;quot; &amp;quot; ))])//*[not(ancestor::aside or name()=&amp;quot;aside&amp;quot;)]/text()&amp;#39;)), &amp;quot;[\t\n]&amp;quot; , &amp;quot;&amp;quot;)
temp.res
}
web.fetch &amp;lt;- function(URL) {
temp.web &amp;lt;- read_html(URL)
}
PPR.Filter.Wrap &amp;lt;- function(URL) {
  temp.res &amp;lt;- PPR.Filter(web.fetch(URL))
  temp.res &amp;lt;- list.clean(temp.res, function(x) nchar(x) == 0, TRUE)
  temp.res 
}
#Res1 &amp;lt;- PPR.Filter.Wrap(&amp;quot;https://www.whitehouse.gov/briefings-statements/president-donald-j-trumps-first-year-of-foreign-policy-accomplishments/&amp;quot;)
#Res2 &amp;lt;- PPR.Filter.Wrap(&amp;quot;https://www.whitehouse.gov/briefings-statements/press-briefing-press-secretary-sarah-sanders-121917/&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;scraping-presidential-actions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scraping Presidential Actions&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Pres.Acts &amp;lt;- lapply(as.character(PresAct.linkset$link), PPR.Filter.Wrap)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scraping-the-briefings-and-statements&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scraping the Briefings and Statements&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Statements.Briefings &amp;lt;- lapply(as.character(BriefState.linkset$link), PPR.Filter.Wrap)
save(Pres.Acts,PresAct.linkset,Statements.Briefings,BriefState.linkset, file=&amp;quot;data/PresText.RData&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tidying-the-text&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Tidying the Text&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;load(&amp;quot;~/R/MyNLWeb/data/PresText.RData&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The hard work is in cleaning up the text. When the document was compiled, there were 2074 statements and briefings and there were 457 Presidential actions with each as a list in the bigger list. I will unlist each individual document and transform it to character. For housekeeping, I will also tally the docs and the line/paragraph numbers; this fails for a misalignment in one of the two examples.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(magrittr)
library(tidytext)
text_df &amp;lt;- data_frame(text=as.character(unlist(Pres.Acts))) # Create characters
k &amp;lt;- NULL
for (i in 1:length(Pres.Acts)) {
  k &amp;lt;- c(k,length(Pres.Acts[[i]]))
}
mydoc &amp;lt;- data.frame(rep(c(seq(1,length(Pres.Acts))),k))
myline &amp;lt;- data.frame(unlist(as.vector(sapply(k, function(x) {cbind(seq(1,x))}))))
ind.df &amp;lt;- data.frame(doc=mydoc,line=myline)
myPA.df &amp;lt;- data.frame(doc=mydoc,line=myline,text=text_df) # A full dataset
names(myPA.df) &amp;lt;- c(&amp;quot;doc&amp;quot;,&amp;quot;line&amp;quot;,&amp;quot;text&amp;quot;)
tidy.PA &amp;lt;-myPA.df %&amp;gt;%
# group_by(doc) %&amp;gt;%
 unnest_tokens(word, text)
text_df &amp;lt;- data_frame(text=as.character(unlist(Statements.Briefings)))
k &amp;lt;- NULL
for (i in 1:length(Statements.Briefings)) {
  k &amp;lt;- c(k,length(Statements.Briefings[[i]]))
}
mydoc &amp;lt;- rep(c(seq(1,length(Statements.Briefings))),k)
# myline &amp;lt;- unlist(as.vector(sapply(k, function(x) {cbind(seq(1,x))})))
# ind.df &amp;lt;- data.frame(doc=mydoc,line=myline)
mySB.df &amp;lt;- data.frame(doc=mydoc,text=text_df)
names(mySB.df) &amp;lt;- c(&amp;quot;doc&amp;quot;,&amp;quot;text&amp;quot;)
tidy.SB &amp;lt;-mySB.df %&amp;gt;%
# group_by(doc) %&amp;gt;%
 unnest_tokens(word, text)
data(stop_words)
# Remove stop words
tidy.SB &amp;lt;- tidy.SB %&amp;gt;%
  anti_join(stop_words)
tidy.PA &amp;lt;- tidy.PA %&amp;gt;%
  anti_join(stop_words)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-does-the-president-talk-about&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;what does the President talk about?&lt;/h1&gt;
&lt;p&gt;Word frequencies can be tabulated for each set of data. I will plot the barplots.&lt;/p&gt;
&lt;div id=&#34;statements-and-briefings&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Statements and Briefings&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
tidy.SB %&amp;gt;%
  count(word, sort = TRUE) %&amp;gt;%
  filter(n &amp;gt; 5000) %&amp;gt;%
  mutate(word = reorder(word, n)) %&amp;gt;%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-21-tidytext-is-neat_files/figure-html/SBplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;presidential-actions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Presidential Actions&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
tidy.PA %&amp;gt;%
  count(word, sort = TRUE) %&amp;gt;%
  filter(n &amp;gt; 500) %&amp;gt;%
  mutate(word = reorder(word, n)) %&amp;gt;%
  ggplot(aes(word, n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-21-tidytext-is-neat_files/figure-html/PAplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;word-clouds&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Word Clouds&lt;/h2&gt;
&lt;div id=&#34;presidential-actions-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Presidential Actions&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(wordcloud)
set.seed(1234)
wc &amp;lt;- tidy.PA %&amp;gt;% count(word, sort = TRUE)
wordcloud(wc$word,  wc$n, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-21-tidytext-is-neat_files/figure-html/WCPA-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;statements-and-briefings-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Statements and Briefings&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1234)
wc &amp;lt;- tidy.SB %&amp;gt;% count(word, sort = TRUE)
wordcloud(wc$word,  wc$n, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(8, &amp;quot;Dark2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-21-tidytext-is-neat_files/figure-html/WCSB-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0800</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Generalizing Ordered Cumulative Regression Models</title>
      <link>/publication/gen-ord-regression/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/publication/gen-ord-regression/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bond Ratings</title>
      <link>/project/bond-ratings/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/bond-ratings/</guid>
      <description>&lt;p&gt;There will be content.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generalized Ordered Regression Models</title>
      <link>/project/gen-ord-logit/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/gen-ord-logit/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Oregon Property Taxes</title>
      <link>/project/prop-tax/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/prop-tax/</guid>
      <description>&lt;p&gt;Fred Thompson, Kawika Pierson, and I have written a few papers on the odd property tax limitations in Oregon.  Basically, there is a cap on the rate of growth and no reset at sale provision so assessment quality suffers tremendously.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Property Tax Fairness in Multnomah County, Oregon</title>
      <link>/publication/cjpp-ptw/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/publication/cjpp-ptw/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The State, Property Rights, and the Middle Class: Empirical Support for an Aristotelian Observation</title>
      <link>/publication/midclas2/</link>
      <pubDate>Sun, 01 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>/publication/midclas2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Tale of Two Cities: Learning from Oregon&#39;s Property Tax Administration</title>
      <link>/publication/ttc-proptaxmc/</link>
      <pubDate>Mon, 02 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/ttc-proptaxmc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The intergovernmental context of alternative service delivery choices</title>
      <link>/publication/kwb-publius/</link>
      <pubDate>Sat, 01 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>/publication/kwb-publius/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
